{"version":3,"sources":["context/GitSearchContext.js","images/logogit.png","actions/index.js","data.js","styles.js","pages/Login.js","components/Header.js","service/FetchUserInfo.js","service/FetchRepositoriesList.js","components/SearchBar.js","components/UserInfo.js","service/FetchRepositoryInfo.js","components/Repositories.js","components/UserGitInfo.js","pages/SearchPage.js","App.js","reducers/login.js","store/index.js","provider/GitSearchProvider.js","index.js"],"names":["GitSearchContext","createContext","LOGIN","loginData","LoginBody","styled","div","SearchBody","HeaderStyle","header","TitleLogin","h1","LoginForm","form","SearchBarStyle","section","ReposList","ReposCard","UserContainer","ReposButton","button","ModalStyle","ButtonModal","Login","useContext","isValid","setValid","dispatch","useDispatch","history","useHistory","src","logogit","width","alt","data-testid","htmlFor","id","type","name","placeholder","href","onClick","userInfo","username","document","getElementById","userpassword","value","payload","push","Header","userName","useSelector","state","window","location","pathname","setData","a","endpoint","fetch","response","json","responseJson","SearchBar","setUserInfo","setRepositoryList","setRepositoriesShow","searchInput","fetchUserInfo","fetchRepositoriesList","UserInfo","repositoriesShow","message","avatar_url","bio","company","blog","followers","following","public_repos","Repositories","repositoryList","modalIsOpen","setModalIsOpen","repositoryInfo","setRepositoryInfo","handleModal","fetchRepositoryInfo","closeModal","loading","map","repository","isOpen","onRequestClose","ariaHideApp","description","forks_count","stargazers_count","language","fork","source","html_url","target","rel","full_name","UserGitInfo","SearchPage","App","exact","path","component","INITIAL_STATE","loginReducer","action","createStore","GitSearchProvider","children","useState","context","Provider","ReactDOM","render","store","basename","process"],"mappings":"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","file":"static/js/main.3b4c6833.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst GitSearchContext = createContext();\n\nexport default GitSearchContext;\n","export default __webpack_public_path__ + \"static/media/logogit.70a43aff.png\";","export const LOGIN = 'LOGIN';\n\nexport const userLogin = (userInfo) => ({\n  type: LOGIN,\n  payload: userInfo,\n});\n","export const loginData = {\n  username: 'admin',\n  password: 'password',\n};\n","import styled from 'styled-components';\n\nexport const LoginBody = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-family: sans-serif;\n  justify-content: center;\n  margin-top: 50px;\n`;\n\nexport const SearchBody = styled.div`\n  align-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-family: sans-serif;\n  justify-content: center;\n`;\n\nexport const HeaderStyle = styled.header`\n  align-content: space-between;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-family: sans-serif;\n  justify-content: center;\n  width: 80%;\n\n  h1 {\n    font-size: 40px;\n    margin-bottom: 0;\n  }\n\n  p {\n    font-size: 30px;\n    font-weight: 500;\n    margin: 0;\n    padding: 0;\n  }\n\n  section {\n    align-items: baseline;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 30px;\n    max-width: 600px;\n    min-width: 400px;\n    width: 80%;\n  }\n\n  div {\n    align-items: baseline;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n  }\n\n  button {\n    background: #cf2200;\n    border-radius: 5px;\n    border: 0;\n    color: white;\n    font-size: 20px;\n    font-weight: 900;\n    margin-bottom: 10px;\n    margin-left: 10px;\n    &:hover {\n      background: #e32500;\n    }\n  }\n`;\n\nexport const TitleLogin = styled.h1`\n  font-size: 60px;\n  margin-bottom: 10px;\n  margin-top: 0px;\n`;\n\nexport const LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  min-width: 200px;\n  width: 80%;\n\n  button {\n    background: linear-gradient(#67ae55, #578843);\n    border-color: #3b6e22 #3b6e22 #2c5115;\n    border-radius: 5px;\n    box-shadow: 0 1px 1px #a4e388;\n    color: white;\n    font-size: 20px;\n    font-weight: 900;\n    height: 40px;\n    margin-bottom: 10px;\n    margin-top: 15px;\n    &:hover {\n      background: linear-gradient(#89d675, #61974b);\n    }\n  }\n\n  input {\n    border-radius: 5px;\n    border: 1px solid darkgray;\n    height: 10px;\n    letter-spacing: 1px;\n    margin-bottom: 10px;\n    padding: 12px;\n    &:placeholder {\n      color: darkgray;\n      font-size: 18px;\n    }\n  }\n\n  label {\n    color: black;\n    font-size: 20px;\n    font-weight: 500;\n    margin-bottom: 2px;\n    margin-left: 5px;\n  }\n\n  span {\n    color: red;\n  }\n\n  div {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  a {\n    font-size: 15px;\n    margin: 0px;\n    text-decoration: none;\n  }\n`;\n\nexport const SearchBarStyle = styled.section`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  max-width: 200vw;\n\n  label {\n    font-size: 23px;\n    margin-right: 8px;\n  }\n\n  input {\n    border-radius: 5px;\n    border: 1px solid darkgray;\n    height: 10px;\n    letter-spacing: 1px;\n    padding: 10px;\n    &:placeholder {\n      color: darkgray;\n      font-size: 18px;\n    }\n  }\n\n  button {\n    background-color: #32b3ff;\n    border-color: #0071b3;\n    border-radius: 5px;\n    color: white;\n    font-weight: 900;\n    margin-left: 2px;\n    padding: 7px;\n    &:hover {\n      background-color: #0071b3;\n    }\n  }\n`;\n\nexport const ReposList = styled.section`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n`;\n\nexport const ReposCard = styled.div`\n  align-items: flex-start;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  button {\n    background-color: #0097ff;\n    border: none;\n    border-radius: 5px;\n    box-sizing: border-box;\n    color: white;\n    font-weight: bold;\n    margin: 3px;\n    padding: 8px;\n    &:hover {\n      background-color: #0082dc;\n      box-shadow: 0 0 10px darkgray;\n      cursor: default;\n    }\n  }\n`;\n\nexport const UserContainer = styled.section`\n  background: radial-gradient(\n    circle,\n    rgba(236, 236, 236, 1) 35%,\n    rgba(191, 191, 191, 1) 100%\n  );\n  background: rgb(236, 236, 236);\n  border-radius: 10px;\n  border: 1px solid black;\n  box-shadow: 3px 3px darkgray;\n  display: flex;\n  flex-direction: row;\n  margin-top: 20px;\n  max-width: 600px;\n  min-width: 465px;\n  padding-right: 10px;\n  width: 60vw;\n\n  div {\n    font-size: 17px;\n  }\n\n  img {\n    border-bottom-left-radius: 10px;\n    border-right: 1px solid darkgray;\n    border-top-left-radius: 10px;\n    box-shadow: 5px 0 5px -2px #888;\n    margin-right: 5px;\n  }\n\n  button {\n    align-self: flex-end;\n    border: 1px red solid;\n    width: 120px;\n  }\n`;\n\nexport const ReposButton = styled.button`\n  background-color: #45da00;\n  border-color: #3fc600;\n  border-radius: 5px;\n  color: white;\n  font-weight: 900;\n  margin-bottom: 5px;\n  margin-top: 7px;\n  padding: 8px;\n`;\n\nexport const ModalStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 25px;\n  max-width: 600px;\n  background-color: lightgray;\n  border-radius: 8px;\n  padding-left: 10px;\n\n  span {\n    padding: 6px;\n    padding-left: 0px;\n  }\n\n  a {\n    text-decoration: none;\n    margin-top: 15px;\n  }\n`;\n\nexport const ButtonModal = styled.button`\n  align-self: flex-start;\n  background-color: red;\n  border-radius: 100%;\n  border: none;\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin-bottom: 10px;\n  padding: 8px;\n`;\n","import React, { useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport GitSearchContext from '../context/GitSearchContext';\nimport logogit from '../images/logogit.png';\nimport { userLogin } from '../actions';\nimport { loginData } from '../data';\nimport { LoginForm, LoginBody, TitleLogin } from '../styles';\n\nfunction Login() {\n  const { isValid, setValid } = useContext(GitSearchContext);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleLoginButton = () => {\n    const username = document.getElementById('username');\n    const userpassword = document.getElementById('userpassword');\n    if (\n      username.value === loginData.username &&\n      userpassword.value === loginData.password\n    ) {\n      dispatch(userLogin(username.value));\n      history.push('/searchpage');\n    } else {\n      username.value = '';\n      userpassword.value = '';\n      setValid(false);\n    }\n  };\n\n  return (\n    <LoginBody>\n      <img src={logogit} width='80px' alt='logo' data-testid='logo-img' />\n      <TitleLogin data-testid='title-login'>Git-Search</TitleLogin>\n      <LoginForm>\n        <label htmlFor='username' data-testid='username-label'>\n          Login\n        </label>\n        <input\n          id='username'\n          type='text'\n          name='user-name'\n          placeholder='Nome de usuário'\n          data-testid='username-input'\n        />\n        <div>\n          <label htmlFor='userpassword' data-testid='password-label'>\n            Senha\n          </label>\n          <a href='/gitsearch'>Esqueceu Senha?</a>\n        </div>\n        <input\n          id='userpassword'\n          type='password'\n          name='user-password'\n          placeholder='Senha'\n          data-testid='password-input'\n        />\n        {!isValid ? (\n          <span data-testid='wrong-message'>\n            <em>Login ou Senha incorretos.</em>\n          </span>\n        ) : null}\n        <button\n          type='button'\n          onClick={handleLoginButton}\n          data-testid='login-button'\n        >\n          Entrar\n        </button>\n      </LoginForm>\n    </LoginBody>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { HeaderStyle } from '../styles';\nimport logogit from '../images/logogit.png';\n\nexport default function Header() {\n  const userName = useSelector((state) => state.username);\n\n  const handleLogoutButton = () => {\n    window.location.pathname = '/gitsearch';\n  };\n\n  return (\n    <HeaderStyle>\n      <section>\n        <div>\n          <img src={logogit} width='40px' alt='logo' data-testid='logo-img' />\n          <h1 data-testid='title-search'>Git-Search</h1>\n        </div>\n        <div>\n          <p data-testid='logged-user'>{userName}</p>\n          <button\n            data-testid='logout-button'\n            type='button'\n            onClick={handleLogoutButton}\n          >\n            Sair\n          </button>\n        </div>\n      </section>\n    </HeaderStyle>\n  );\n}\n","export default async function fetchUserInfo(setData, value) {\n  const endpoint = `https://api.github.com/users/${value}`;\n  const response = await fetch(endpoint);\n  const responseJson = await response.json();\n  setData(responseJson);\n}\n","export default async function fetchRepositoriesList(setData, value) {\n  const endpoint = `https://api.github.com/users/${value}/repos`;\n  const response = await fetch(endpoint);\n  const responseJson = await response.json();\n  setData(responseJson);\n}\n","import React, { useContext } from 'react';\nimport GitSearchContext from '../context/GitSearchContext';\nimport fetchUserInfo from '../service/FetchUserInfo';\nimport fetchRepositoriesList from '../service/FetchRepositoriesList';\nimport { SearchBarStyle } from '../styles';\n\nexport default function SearchBar() {\n  const { setUserInfo, setRepositoryList, setRepositoriesShow } = useContext(\n    GitSearchContext\n  );\n\n  const handleSearchButton = () => {\n    const searchInput = document.getElementById('usersearch').value;\n    fetchUserInfo(setUserInfo, searchInput);\n    fetchRepositoriesList(setRepositoryList, searchInput);\n    setRepositoriesShow(false);\n  };\n\n  return (\n    <SearchBarStyle>\n      <div>\n        <label data-testid='searchbar-label' htmlFor='usersearch'>\n          Busca de usuário\n        </label>\n      </div>\n      <input\n        id='usersearch'\n        type='text'\n        name='usersearch'\n        data-testid='searchbar-input'\n      />\n      <button\n        type='button'\n        data-testid='searchbar-button'\n        onClick={handleSearchButton}\n      >\n        Buscar\n      </button>\n    </SearchBarStyle>\n  );\n}\n","import React, { useContext } from 'react';\nimport GitSearchContext from '../context/GitSearchContext';\nimport { UserContainer, ReposButton } from '../styles';\n\nexport default function UserInfo() {\n  const { userInfo, setRepositoriesShow, repositoriesShow } = useContext(\n    GitSearchContext\n  );\n\n  const handleShowRepositoriesButton = () => {\n    if (!repositoriesShow) {\n      setRepositoriesShow(true);\n    } else {\n      setRepositoriesShow(false);\n    }\n  };\n\n  return (\n    <section>\n      {userInfo.message ? (\n        <p data-testid='notfound'>Nenhum usuário encontrado.</p>\n      ) : null}\n      {userInfo.name ? (\n        <UserContainer>\n          {userInfo.avatar_url ? (\n            <img src={userInfo.avatar_url} alt='user-avatar' width='250px' />\n          ) : null}\n          <div>\n            {userInfo.name ? (\n              <p data-testid='user-name'>{userInfo.name}</p>\n            ) : null}\n            {userInfo.bio ? <p>{userInfo.bio}</p> : null}\n            {userInfo.company ? <p>Companhia: {userInfo.company}</p> : null}\n            {userInfo.location ? <p>Localização: {userInfo.location}</p> : null}\n            {userInfo.blog ? <p>Site Pessoal: {userInfo.blog}</p> : null}\n            {userInfo.followers ? (\n              <p>Seguidores: {userInfo.followers}</p>\n            ) : null}\n            {userInfo.following ? <p>Seguindo: {userInfo.following}</p> : null}\n            {userInfo.public_repos ? (\n              <p>Repositórios: {userInfo.public_repos}</p>\n            ) : null}\n          </div>\n        </UserContainer>\n      ) : null}\n      {userInfo.public_repos && userInfo.public_repos > 0 ? (\n        <ReposButton\n          data-testid='repos-button-show'\n          type='button'\n          onClick={handleShowRepositoriesButton}\n        >\n          Ver Repositórios\n        </ReposButton>\n      ) : null}\n    </section>\n  );\n}\n","export default async function fetchRepositoryInfo(setData, value) {\n  const endpoint = `https://api.github.com/repositories/${value}`;\n  const response = await fetch(endpoint);\n  const responseJson = await response.json();\n  setData(responseJson);\n}\n","import React, { useContext } from 'react';\nimport Modal from 'react-modal';\nimport GitSearchContext from '../context/GitSearchContext';\nimport fetchRepositoryInfo from '../service/FetchRepositoryInfo';\nimport { ReposCard, ReposList, ModalStyle, ButtonModal } from '../styles';\n\nexport default function Repositories() {\n  const {\n    repositoryList,\n    modalIsOpen,\n    setModalIsOpen,\n    repositoryInfo,\n    setRepositoryInfo,\n  } = useContext(GitSearchContext);\n\n  const handleModal = (id) => {\n    fetchRepositoryInfo(setRepositoryInfo, id);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setRepositoryInfo({ loading: 'Carregando...' });\n    setModalIsOpen(false);\n  };\n\n  return (\n    <div>\n      <ReposList>\n        <ReposCard>\n          {repositoryList\n            ? repositoryList.map((repository) => (\n                <button\n                  type='button'\n                  data-testid='repos-card'\n                  onClick={() => handleModal(repository.id)}\n                  key={repository.id}\n                >\n                  {repository.name}\n                </button>\n              ))\n            : null}\n        </ReposCard>\n      </ReposList>\n      <div>\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          ariaHideApp={false}\n        >\n          <ButtonModal onClick={closeModal}>X</ButtonModal>\n          <ModalStyle>\n            {repositoryInfo.loading ? (\n              <span>{repositoryInfo.loading}</span>\n            ) : null}\n            {repositoryInfo.name ? (\n              <span>Nome: {repositoryInfo.name}</span>\n            ) : null}\n            {repositoryInfo.description ? (\n              <span>Descrição: {repositoryInfo.description}</span>\n            ) : null}\n            {repositoryInfo.forks_count >= 0 ? (\n              <span>Fork: {repositoryInfo.forks_count}</span>\n            ) : null}\n            {repositoryInfo.stargazers_count >= 0 ? (\n              <span>Star: {repositoryInfo.stargazers_count}</span>\n            ) : null}\n            {repositoryInfo.language ? (\n              <span>Linguagem: {repositoryInfo.language}</span>\n            ) : null}\n            {repositoryInfo.fork === true ? (\n              <span>\n                Forked from:{' '}\n                <a\n                  href={repositoryInfo.source.html_url}\n                  target='_blank'\n                  rel='noreferrer'\n                >\n                  {repositoryInfo.source.full_name}\n                </a>\n              </span>\n            ) : null}\n            {repositoryInfo.html_url ? (\n              <a\n                href={repositoryInfo.html_url}\n                target='_blank'\n                rel='noreferrer'\n              >\n                Ver no GitHub\n              </a>\n            ) : null}\n          </ModalStyle>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport GitSearchContext from '../context/GitSearchContext';\nimport UserInfo from './UserInfo';\nimport Repositories from './Repositories';\n\nexport default function UserGitInfo() {\n  const { repositoriesShow } = useContext(GitSearchContext);\n  return (\n    <div>\n      <UserInfo />\n      {repositoriesShow ? <Repositories /> : null}\n    </div>\n  );\n}\n","import React from 'react';\nimport Header from '../components/Header';\nimport SearchBar from '../components/SearchBar';\nimport UserGitInfo from '../components/UserGitInfo';\nimport { SearchBody } from '../styles';\n\nfunction SearchPage() {\n  return (\n    <SearchBody>\n      <Header />\n      <SearchBar />\n      <UserGitInfo />\n    </SearchBody>\n  );\n}\n\nexport default SearchPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport SearchPage from './pages/SearchPage';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path='/' component={Login} />\n      <Route exact path='/searchpage' component={SearchPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import { LOGIN } from '../actions/index';\n\nconst INITIAL_STATE = {\n  username: '',\n};\n\nconst loginReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { username: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import { createStore } from 'redux';\nimport loginReducer from '../reducers/login';\n\nexport default createStore(loginReducer);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport GitSearchContext from '../context/GitSearchContext';\n\nexport default function GitSearchProvider({ children }) {\n  const [isValid, setValid] = useState(true);\n  const [userInfo, setUserInfo] = useState([]);\n  const [repositoryList, setRepositoryList] = useState([]);\n  const [repositoriesShow, setRepositoriesShow] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [repositoryInfo, setRepositoryInfo] = useState({\n    loading: 'Carregando...',\n  });\n\n  const context = {\n    isValid,\n    setValid,\n    userInfo,\n    setUserInfo,\n    repositoryList,\n    setRepositoryList,\n    repositoriesShow,\n    setRepositoriesShow,\n    modalIsOpen,\n    setModalIsOpen,\n    repositoryInfo,\n    setRepositoryInfo,\n  };\n\n  return (\n    <GitSearchContext.Provider value={context}>\n      {children}\n    </GitSearchContext.Provider>\n  );\n}\n\nGitSearchProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport GitSearchProvider from './provider/GitSearchProvider';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <GitSearchProvider>\n        <App />\n      </GitSearchProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}